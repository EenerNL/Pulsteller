# ESPhome-code gebaseerd op code van Huizebruin/s0tool
# Bron File : https://github.com/huizebruin/s0tool/tree/main/

#===== BASE CONFIG =====#  BEGIN  #==
substitutions:
  version: 'beta12'
  device_description: 'pulsteller - ${version}'
  device_name: 'pulsteller'

esphome:
  name: ${device_name}
  comment: '${device_description}'
  project:
    name: EenerNL.${device_name}
    version: "${version}"
  platform: esp8266
  board: d1_mini
  esp8266_restore_from_flash: true
  
dashboard_import:
  package_import_url: github://EenerNL/kwh-pulsteller/pulsteller.yaml

ota:

wifi:
  ap:
    ssid: ${device_name}
    ap_timeout: 15s
captive_portal:
web_server:
  port: 80
  
logger:
  level: DEBUG
  esp8266_store_log_strings_in_flash: false
#===== BASE CONFIG =====#  END  #==

#===== GLOBAL VARIABLES =====#  BEGIN  #==
# not used
#===== GLOBAL VARIABLES =====#  END  #==

#===== BUTTONS / SETTINGS =====#  BEGIN  #==
button:  
  - platform: restart
    name: 'Restart device'
  - platform: template
    name: "Reset Verbruik sinds online"
    id: button_reset_total
    on_press:
      - pulse_meter.set_total_pulses:
          id: actual_power
          value: 0
number:
  - platform: template
    id: pulse_rate
    name: 'Pulsrate setting'
    min_value: '1'
    max_value: '10000'
    step: '1'
    restore_value: yes
    initial_value: '1000'
#===== BUTTONS / SETTINGS =====#  END  #==

#===== HOME ASSISTANT =====#  BEGIN  #==
api:
  services:
    - service: adjust_total_kwh
      variables:
        total_value: float
      then:
        - pulse_meter.set_total_pulses:
            id: actual_power
            value: !lambda 'return total_value * 1000;'
time:
  - platform: homeassistant
    id: homeassistant_time
#===== HOME ASSISTANT =====#  END  #==

#===== POWER SENSORS =====#  BEGIN  #==
sensor:
  - platform: pulse_meter
    pin: D5                                         # connection on board
    id: actual_power
    name: 'Pulsteller Actueel vermogen'             # displayname home assistant
    unit_of_measurement: 'kW'
    accuracy_decimals: 3
    state_class: measurement
    device_class: power
    icon: 'mdi:flash'                               # icon type in home assistant
    filters:
#      - multiply: 0.06                             # 1000imp/kwh = 0.06 (default unit is “pulses/min”)
       lambda: return x * (60.0 / id(pulse_rate));
    total:
      id: total_power_usage
      name: 'Pulsteller Verbruik sinds online'      # displayname home assistant
      unit_of_measurement: 'kWh'
      accuracy_decimals: 3
      state_class: total_increasing
      device_class: energy
      icon: 'mdi:flash'                             # icon type in home assistant
      filters:
#        - multiply: 0.001
        - lambda: return x * (1.0 / id(pulse_rate));
  - platform: total_daily_energy
    name: 'Pulsteller Verbruik vandaag'
    id: daily_power_usage
    power_id: actual_power
    unit_of_measurement: 'kWh'
    icon: mdi:circle-slice-3
    state_class: total_increasing
    device_class: energy
    accuracy_decimals: 3
    restore: true
#===== POWER SENSORS =====#  END  #==

#===== UTILITY SENSORS =====#  BEGIN  #==
  - platform: uptime
    name: 'Uptime'
    id: uptime_sensor
    update_interval: 30s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();

text_sensor:
  - platform: wifi_info
    ip_address:
      name: 'Wi-Fi IP-adres'
      icon: mdi:ip-network
    ssid:
      name: 'Wi-Fi SSID'
      icon: mdi:access-point-network
    mac_address:
      name: 'Wi-Fi Mac-adres'
      icon: mdi:folder-key-network-outline
      
#  - platform: template
#    name: 'pulsteller version'
#    icon: mdi:label-outline
#    update_interval: 1h
#    lambda: return ${version};
      
  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true

  - platform: template
    name: 'Online sinds'
    id: uptime_human
    icon: mdi:clock-start
#===== UTILITY SENSORS =====#  END  #==
